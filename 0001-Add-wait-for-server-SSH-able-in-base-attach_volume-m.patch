From 8b700dcb240cb30cbac7c6857644d6be222aff9f Mon Sep 17 00:00:00 2001
From: Ghanshyam Mann <gmann@ghanshyammann.com>
Date: Mon, 30 May 2022 12:39:57 -0500
Subject: [PATCH 1/1] Add wait for server SSH-able in base attach_volume method

As explained in bug#1960346, we need to wait for server to
be fully booted before detach volume is called. Let's add
a wait in attach_volume base method so that we double make
sure server is ready before detach_volume is called either
by test explicitly or via cleanup method. This need create
server method to inject the validation resources in server
by default.

Closes-Bug: #1960346
Change-Id: I0e7f4c7717f3451f4a09dad0d50a1ada018497ff
---
 tempest/api/compute/base.py                   | 27 ++++++++++++++++-
 .../servers/test_server_rescue_negative.py    | 10 -------
 .../volumes/test_attach_volume_negative.py    |  2 ++
 tempest/api/volume/base.py                    | 30 ++++++++++++++++++-
 tempest/api/volume/test_volumes_backup.py     |  2 ++
 5 files changed, 59 insertions(+), 12 deletions(-)

diff --git a/tempest/api/compute/base.py b/tempest/api/compute/base.py
index 75df5ae7c..8ce67f147 100644
--- a/tempest/api/compute/base.py
+++ b/tempest/api/compute/base.py
@@ -236,7 +236,7 @@ class BaseV2ComputeTest(api_version_utils.BaseMicroversionTest,
                 raise
 
     @classmethod
-    def create_test_server(cls, validatable=False, volume_backed=False,
+    def create_test_server(cls, validatable=True, volume_backed=False,
                            validation_resources=None, clients=None, **kwargs):
         """Wrapper utility that returns a test server.
 
@@ -269,6 +269,14 @@ class BaseV2ComputeTest(api_version_utils.BaseMicroversionTest,
         if clients is None:
             clients = cls.os_primary
 
+        # NOTE(gmann): We are creating the validation resources by default and
+        # will inject them into the created server. If test want server to wait
+        # for SSH in create server method or later then they can do without any
+        # issue.
+        if validation_resources is None:
+            validation_resources = cls.get_class_validation_resources(
+                cls.os_primary)
+
         body, servers = compute.create_test_server(
             clients,
             validatable,
@@ -614,6 +622,23 @@ class BaseV2ComputeTest(api_version_utils.BaseMicroversionTest,
             self.servers_client, server['id'], volume['id'])
         self.addCleanup(self._detach_volume, server, volume)
 
+        # NOTE(gmann): If test are attaching volume then they detach also
+        # either explicitly in test or in the cleanup method added in this
+        # method. In both cases, let's make sure server is SSH-able before
+        # detach operation is called, more details are in bug#1960346.
+        if CONF.validation.run_validation:
+            validation_resources = self.get_class_validation_resources(
+                self.os_primary)
+            tenant_network = self.get_tenant_network()
+            # Before trying SSH, make sure server is in Active state and
+            # fetching server again in case server object passed in this
+            # method might not have the addresses populated.
+            waiters.wait_for_server_status(
+                self.servers_client, server['id'], 'ACTIVE')
+            compute.wait_for_ssh_or_ping(
+                server, self.os_primary, tenant_network, True,
+                validation_resources, "SSHABLE", True)
+
         return attachment
 
     def create_volume_snapshot(self, volume_id, name=None, description=None,
diff --git a/tempest/api/compute/servers/test_server_rescue_negative.py b/tempest/api/compute/servers/test_server_rescue_negative.py
index 955ba1c16..5e57444de 100644
--- a/tempest/api/compute/servers/test_server_rescue_negative.py
+++ b/tempest/api/compute/servers/test_server_rescue_negative.py
@@ -16,7 +16,6 @@
 import testtools
 
 from tempest.api.compute import base
-from tempest.common import compute
 from tempest.common import utils
 from tempest.common import waiters
 from tempest import config
@@ -159,15 +158,6 @@ class ServerRescueNegativeTestJSON(base.BaseV2ComputeTest):
                                           adminPass=self.password)
         waiters.wait_for_server_status(self.servers_client,
                                        server['id'], 'RESCUE')
-        # NOTE(gmann) In next addCleanup, server unrescue is called before the
-        # detach volume is called in cleanup (added by self.attach_volume()
-        # method) so to make sure server is ready before detach operation, we
-        # need to perform ssh on it, more details are in bug#1960346.
-        if CONF.validation.run_validation:
-            tenant_network = self.get_tenant_network()
-            self.addCleanup(compute.wait_for_ssh_or_ping,
-                            server, self.os_primary, tenant_network,
-                            True, validation_resources, "SSHABLE", True)
         # addCleanup is a LIFO queue
         self.addCleanup(self._unrescue, server['id'])
 
diff --git a/tempest/api/compute/volumes/test_attach_volume_negative.py b/tempest/api/compute/volumes/test_attach_volume_negative.py
index 43b4bf533..40f0fb1f7 100644
--- a/tempest/api/compute/volumes/test_attach_volume_negative.py
+++ b/tempest/api/compute/volumes/test_attach_volume_negative.py
@@ -23,6 +23,8 @@ CONF = config.CONF
 class AttachVolumeNegativeTest(test_attach_volume.BaseAttachVolumeTest):
     """Negative tests of volume attaching"""
 
+    create_default_network = True
+
     @decorators.attr(type=['negative'])
     @decorators.related_bug('1630783', status_code=500)
     @decorators.idempotent_id('a313b5cd-fbd0-49cc-94de-870e99f763c7')
diff --git a/tempest/api/volume/base.py b/tempest/api/volume/base.py
index 172b6ed72..0511357f4 100644
--- a/tempest/api/volume/base.py
+++ b/tempest/api/volume/base.py
@@ -195,14 +195,42 @@ class BaseVolumeTest(api_version_utils.BaseMicroversionTest,
         self.addCleanup(self.servers_client.detach_volume, server_id,
                         volume_id)
 
-    def create_server(self, wait_until='ACTIVE', **kwargs):
+        # NOTE(gmann): If test are attaching volume then they detach also
+        # either explicitly in test or in the cleanup method added in this
+        # method. In both cases, let's make sure server is SSH-able before
+        # detach operation is called, more details are in bug#1960346.
+        if CONF.validation.run_validation:
+            validation_resources = self.get_class_validation_resources(
+                self.os_primary)
+            tenant_network = self.get_tenant_network()
+            # Before trying SSH, make sure server is in Active state and
+            # fetching server again in case server object passed in this
+            # method might not have the addresses populated.
+            waiters.wait_for_server_status(
+                self.servers_client, server_id, 'ACTIVE')
+            server = self.servers_client.show_server(server_id)['server']
+            compute.wait_for_ssh_or_ping(
+                server, self.os_primary, tenant_network, True,
+                validation_resources, "SSHABLE", True)
+
+    def create_server(self, wait_until='ACTIVE', validatable=True,
+                      validation_resources=None, **kwargs):
         name = kwargs.pop(
             'name',
             data_utils.rand_name(self.__class__.__name__ + '-instance'))
 
+        # NOTE(gmann): We are creating the validation resources by default and
+        # will inject them into the created server. If test want server to wait
+        # for SSH in create server method or later then they can do without any
+        # issue.
+        if validation_resources is None:
+            validation_resources = self.get_class_validation_resources(
+                self.os_primary)
         tenant_network = self.get_tenant_network()
         body, _ = compute.create_test_server(
             self.os_primary,
+            validatable=validatable,
+            validation_resources=validation_resources,
             tenant_network=tenant_network,
             name=name,
             wait_until=wait_until,
diff --git a/tempest/api/volume/test_volumes_backup.py b/tempest/api/volume/test_volumes_backup.py
index 138d1206e..326479384 100644
--- a/tempest/api/volume/test_volumes_backup.py
+++ b/tempest/api/volume/test_volumes_backup.py
@@ -29,6 +29,8 @@ CONF = config.CONF
 class VolumesBackupsTest(base.BaseVolumeTest):
     """Test volumes backup"""
 
+    create_default_network = True
+
     @classmethod
     def skip_checks(cls):
         super(VolumesBackupsTest, cls).skip_checks()
-- 
2.36.1

